{"version":3,"sources":["main.js"],"names":["backToTopBtn","document","getElementById","window","addEventListener","body","scrollTop","documentElement","classList","add","remove","e","preventDefault","scrollTo","top","behavior","isInViewport","element","rect","getBoundingClientRect","innerHeight","clientHeight","bottom","animateOnScroll","footer","querySelector","navLinks","querySelectorAll","forEach","link","style","transition","transform","faqItems","item","question","otherItem","contains","toggle","contactForm","submitBtn","originalText","textContent","disabled","setTimeout","backgroundColor","reset","event","console","error","message","location","href","reason"],"mappings":"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","sourcesContent":["      // Script per il pulsante \"Torna su\"\r\n      const backToTopBtn = document.getElementById('backToTop');\r\n      \r\n      window.addEventListener('scroll', () => {\r\n          if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {\r\n              backToTopBtn.classList.add('active');\r\n          } else {\r\n              backToTopBtn.classList.remove('active');\r\n          }\r\n      });\r\n      \r\n      backToTopBtn.addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          window.scrollTo({\r\n              top: 0,\r\n              behavior: 'smooth'\r\n          });\r\n      });\r\n      \r\n      // Animazione quando gli elementi del footer diventano visibili\r\n      document.addEventListener('DOMContentLoaded', () => {\r\n          // Funzione per controllare se un elemento Ã¨ nel viewport\r\n          function isInViewport(element) {\r\n              const rect = element.getBoundingClientRect();\r\n              return (\r\n                  rect.top <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n                  rect.bottom >= 0\r\n              );\r\n          }\r\n          \r\n          // Animazione per gli elementi all'ingresso nel viewport\r\n          function animateOnScroll() {\r\n              const footer = document.querySelector('footer');\r\n              \r\n              if (isInViewport(footer)) {\r\n                  footer.classList.add('visible');\r\n              }\r\n          }\r\n          \r\n          // Check iniziale e listener per lo scroll\r\n          animateOnScroll();\r\n          window.addEventListener('scroll', animateOnScroll);\r\n          \r\n          // Effetto hover per i link del menu di navigazione\r\n          const navLinks = document.querySelectorAll('nav a');\r\n          \r\n          navLinks.forEach(link => {\r\n              link.addEventListener('mouseenter', () => {\r\n                  link.style.transition = 'all 0.3s';\r\n                  link.style.transform = 'translateY(-3px)';\r\n              });\r\n              \r\n              link.addEventListener('mouseleave', () => {\r\n                  link.style.transform = 'translateY(0)';\r\n              });\r\n          });\r\n      });\r\n\r\n      document.addEventListener('DOMContentLoaded', function() {\r\n        // Gestione delle FAQ\r\n        const faqItems = document.querySelectorAll('.faq-item');\r\n        \r\n        faqItems.forEach(item => {\r\n            const question = item.querySelector('.faq-question');\r\n            \r\n            question.addEventListener('click', () => {\r\n                // Chiudi tutti gli altri elementi\r\n                faqItems.forEach(otherItem => {\r\n                    if (otherItem !== item && otherItem.classList.contains('active')) {\r\n                        otherItem.classList.remove('active');\r\n                    }\r\n                });\r\n                \r\n                // Apri/chiudi l'elemento corrente\r\n                item.classList.toggle('active');\r\n            });\r\n        });\r\n        \r\n        // Gestione del form di contatto\r\n        const contactForm = document.getElementById('contact-form');\r\n        \r\n        if (contactForm) {\r\n            contactForm.addEventListener('submit', function(e) {\r\n                e.preventDefault();\r\n                \r\n                // Qui andrebbe l'invio del form, per ora solo un feedback visivo\r\n                const submitBtn = this.querySelector('.btn-submit');\r\n                const originalText = submitBtn.textContent;\r\n                \r\n                submitBtn.textContent = 'Invio in corso...';\r\n                submitBtn.disabled = true;\r\n                \r\n                // Simulazione di invio\r\n                setTimeout(() => {\r\n                    submitBtn.textContent = 'Messaggio Inviato!';\r\n                    submitBtn.style.backgroundColor = '#27ae60';\r\n                    \r\n                    // Reset del form dopo l'invio\r\n                    setTimeout(() => {\r\n                        contactForm.reset();\r\n                        submitBtn.textContent = originalText;\r\n                        submitBtn.disabled = false;\r\n                        submitBtn.style.backgroundColor = '';\r\n                    }, 2000);\r\n                }, 1500);\r\n            });\r\n        }\r\n    });\r\n    \r\n    // Gestione globale degli errori\r\nwindow.addEventListener('error', function (event) {\r\n  // Puoi anche loggare l'errore su un server prima del redirect, se necessario\r\n  console.error('Errore catturato:', event.message);\r\n\r\n  // Reindirizzamento alla pagina di errore\r\n  window.location.href = 'error.html';\r\n});\r\n\r\n// Gestione errori promesse non gestite (es. async/await)\r\nwindow.addEventListener('unhandledrejection', function (event) {\r\n  console.error('Promessa non gestita:', event.reason);\r\n  window.location.href = './404.html';\r\n});\r\n"],"file":"main.dev.js"}